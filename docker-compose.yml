version: "3.7"
services:
    postgres:
        container_name: postgres
        image: postgres:9.6
        environment:
            - POSTGRES_USER=${AIRFLOW}
            - POSTGRES_PASSWORD=${AIRFLOW}
            - POSTGRES_DB=${AIRFLOW}
        logging:
            options:
                max-size: 10m
                max-file: "3"        

    airflow:
        container_name: airflow
        build: ./airflow
        restart: unless-stopped
        logging:
            options:
                max-size: 10m
                max-file: "3"
        command: ["webserver"]
        ports:
            - 8080:8080
        volumes:
            - ./airflow/dags:/usr/local/airflow/dags
            - ./airflow/modules:/usr/local/airflow/modules
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3
        depends_on:
            - postgres
    zookeeper:
        container_name: zookeeper
        image: confluentinc/cp-zookeeper:5.3.1
        environment:
            - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_CLIENT_PORT}
        ports:
            - 2181:2181

    kafka:
        container_name: kafka
        build: ./kafka
        environment: 
            - DEFAULT_TOPIC=${DEFAULT_TOPIC}
            - KAFKA_ZOOKEEPER_CONNECT=${ZOOKEEPER_URL}
            - KAFKA_ADVERTISED_LISTENERS=${KAFKA_LISTENERS}
        depends_on:
            - zookeeper  

    schema-registry:
        container_name: schema-registry
        image: confluentinc/cp-schema-registry:5.3.1
        environment:
            - SCHEMA_REGISTRY_HOST_NAME=${SCHEMA_REGISTRY_HOST_NAME}
            - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=${ZOOKEEPER_URL}
            - SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL=${SCHEMA_REGISTRY_LOGLEVEL}
        depends_on:
            - kafka  

    
networks: 
    default:
        name: backend-net

volumes:
    static_data: {}